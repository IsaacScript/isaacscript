// These are Visual Studio Code settings that should apply to this particular repository.
{
  // ----------------
  // Vanilla settings
  // ----------------

  // This matches the Airbnb JavaScript style guide.
  "editor.rulers": [100],
  "editor.tabSize": 2,

  "files.associations": {
    "*.anm2": "xml", // anm2 files are just XML files.
    "*.dat": "json", // Nearly all mods save JSON to the "save#.dat" file.
    ".env*": "shellscript", // e.g. ".env.example" is the same as ".env".

    // @template-customization-start
    // API Extractor uses the JSONC parser for its configuration files.
    "api-extractor.json": "jsonc",
    "_gitattributes": "properties",
    "_gitignore": "ignore",
    // @template-customization-end
  },

  // We want to always use "lf" to be consistent with all platforms.
  "files.eol": "\n",

  // Automatically remove all trailing whitespace when saving a file.
  "files.trimTrailingWhitespace": true,

  // Configure glob patterns for excluding files and folders in full text searches and quick open.
  "search.exclude": {
    "**/*.mp3": true,
    "**/*.png": true,
    "**/*.svg": true,
    "**/*.wav": true,
    "**/.yarn/": true,
    "**/dist/": true,
    "**/node_modules/": true,
    "LICENSE": true,
  },

  // ------------------
  // Extension settings
  // ------------------

  // Use Prettier to format "cspell.jsonc".
  "cSpell.autoFormatConfigFile": true,

  // -----------------
  // Language settings
  // -----------------

  // By default, VSCode will not automatically fill-in function arguments.
  "javascript.suggest.completeFunctionCalls": true,
  "typescript.suggest.completeFunctionCalls": true,

  // By default, VSCode will prefer non-relative paths for deeply nested files.
  "javascript.preferences.importModuleSpecifier": "relative",
  "typescript.preferences.importModuleSpecifier": "relative",

  // By default, VSCode will not add `import type` automatically.
  "typescript.preferences.preferTypeOnlyAutoImports": true,

  // Show TypeScript errors for files that don't happen to be currently open, which makes TypeScript
  // work similar to other compiled languages like Golang or Rust.
  "typescript.tsserver.experimental.enableProjectDiagnostics": true,

  // Automatically run the formatter when certain files are saved.
  "[javascript][typescript][javascriptreact][typescriptreact]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit",
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.tabSize": 2,
  },
  "[css][html][json][jsonc][markdown][postcss][xml][yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.tabSize": 2,
  },
  // @template-customization-start
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.tabSize": 4,
  },
  "typescript.tsdk": "node_modules\\typescript\\lib",
  // @template-customization-end
}
