{
  "extends": [
    "../isaacscript-tsconfig/tsconfig.base.json",
    "../../tsconfig.monorepo.json",
  ],

  // https://www.typescriptlang.org/docs/handbook/compiler-options.html
  "compilerOptions": {
    "outDir": "dist",
    // We cannot use "noEmit" here since it will prevent TSTL from creating Lua files.

    // Needed since this is a library.
    "declaration": true,
    "declarationMap": true,

    // Needed to hide internal functions from the auto-complete of end-users.
    "stripInternal": true,

    // We need to read the version of the library from the "package.json" file.
    "resolveJsonModule": true,

    // Recommended as per TypeScriptToLua:
    // https://typescripttolua.github.io/docs/getting-started/
    "target": "ESNext",
    "lib": ["ESNext"],
    "moduleResolution": "Node",

    // We use TypeScript definitions for the Lua standard library:
    // https://github.com/TypeScriptToLua/lua-types
    "types": ["lua-types/5.3"],

    // The "strictest" TSConfig template turns this to true, but we need to ensure that the import
    // statements in the ".d.ts" files resolve properly.
    "skipLibCheck": false,

    // The "strictest" TSConfig template turns this to true, but we need to set the value to false
    // since it throws errors when using const enums.
    "isolatedModules": false,
  },

  "include": [
    "./**/*.js",
    "./**/.*.js",
    "./**/*.cjs",
    "./**/.*.cjs",
    "./**/*.mjs",
    "./**/.*.mjs",
    "./**/*.jsx",
    "./**/.*.jsx",
    "./**/*.ts",
    "./**/.*.ts",
    "./**/*.cts",
    "./**/.*.cts",
    "./**/*.mts",
    "./**/.*.mts",
    "./**/*.tsx",
    "./**/.*.tsx",
  ],

  "exclude": ["dist", "scripts"],

  // TypeScriptToLua settings
  "tstl": {
    "buildMode": "library",
    "luaTarget": "5.3",
    "luaPlugins": [
      // A plugin to make enums safe from global variables.
      {
        "name": "../isaacscript-cli/plugins/noExtendedEnums.cjs",
      },
    ],
    "noHeader": true,
    "noImplicitGlobalVariables": true,
  },
}
