Monorepo TODO:

- lint rule for named codeblocks in JSDoc comments
- JSDoc rule for line between @param is not working

TODO:
- NEW DOCUMENTATION WEBSITE
- change bundleEntry.ts to "export {}" with comment - actually, wait until perry merges

LINTER:
- make lint rule for "declare something that is not global in file with one or more imports"
- make lint rule for capital letter on const as const

implement in isaacscript-common:
- change POST_COLLECTIBLE_INIT_FIRST to POST_PICKUP_INIT_FIRST
- isaacscript function to recalculate item ids
- isDamageFromPlayer

function findPlayerFromTear(tear)
  if not tear then return end
  local parent = tear.Parent
  if not parent then return end

  if parent:ToPlayer() then
    return parent:ToPlayer()
  elseif parent:ToFamiliar() and parent.Variant == FamiliarVariant.INCUBUS then
    return parent:ToFamiliar().Player
  end
end

- trophy can move to isaacscript common for respawning purposes
  - when respawning, don't play appear animation
- use tem's entity check function
- make spawn never spawn non-existent entities
- test getCurrentDimension() function to see if Xalum is right // cspell:disable-line
- PHD_PILL_CONVERSIONS to isaacscript-common
- POST_PLAYER_COLLECTIBLE_ADDED
- POST_PLAYER_COLLECTIBLE_REMOVED
- POST_AMBUSH_DONE
- POST_BOMB_DETONATE
- check for item unlocked - https://github.com/Zamiell/racing-plus/blob/main/src/features/mandatory/errors.ts#L80-L165
- bible detection for POST FATAL DAMAGE
- isNewPickup
- compareEntity (to see what changes with dice room effect)
- DICE_ROOM_ACTIVATED
- intercept shovel for decorations
- collectible morph to glitched item
- function getRandomEnumValue
- function to start challenge room
- think about how to track a custom entity that emulates a collectible (pseudo-persistent)
  - add isaacscript-common functionality for persistent entities
- make isValidCollectible (from isaac-typescript-definitions) for mods
- StageAPI2
