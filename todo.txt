- rewrite create docs script to work with latest typedoc-plugin-markdown

- submit bug report: https://github.com/dominikg/tsconfck/discussions/185#discussioncomment-10318566

- in eslint plugin, now a type error in the script folder won't be found... how can i work around this?

- make all tsconfig not extends from base (COMPOSITION OVER INHERITANCE)

- // TODO: Uncomment when TypeScript 5.5 is released.
- delete all "outDir"

- add "// @ts-check" to all eslint configs in the monorepo + the template

- use `sort-keys` eslint plugin to sort object alphabetically in base-typescript-eslint
  https://eslint.org/docs/latest/rules/sort-keys

- things to consider before merging flat config branch:
  - vscode extension no longer in alpha/beta: https://github.com/microsoft/vscode-eslint/releases

- test eslint-plugin-import

- package.mod.json: dynamically fetch TypeScript version from TSTL GitHub repo

- try removing ESLint parserOptions, since they might not be needed with flat config

- new TSESLint changes:
  - https://typescript-eslint.io/blog/announcing-typescript-eslint-v8
  - change project to projectServices
  - remove tsconfig.eslint.json

- remove eslint-plugin-deprecation when available in tseslint

- re-enable knip in lint.ts
- re-enable check-ts in lint.ts
- see top comment of "update.ts" (and uncomment "no-useless-assignment")

- import eslint-plugin-plugin

- lint projects:
  - fix returning `Promise<string[]>`
  - fix `prefer-readonly-parameter-types` for Array<Foo>
  - https://github.com/typescript-eslint/typescript-eslint/issues/7114
  - https://github.com/typescript-eslint/typescript-eslint/issues/8079
  - https://github.com/typescript-eslint/typescript-eslint/issues/4571
  - `T extends Foo[]` --> `T extends readonly Foo[]`

----------------------------------------------------------------------------------------------------

- change to knip.config.jsonc (potentially, once Knip v4 releases)
- change to cspell.config.jsonc (if knip is changed)

- wait for eslint-plugin-n to fix rule:
  - https://github.com/eslint-community/eslint-plugin-n/issues/134
  - if this takes too long, we can make a new ESLint rule to automatically convert 'import *.js";' to '.ts'
  - the idea here is to have IsaacScript mods use ".ts" file extensions instead of ".js"
    - blocked on: https://github.com/TypeScriptToLua/TypeScriptToLua/issues/1514
  - for Node.js apps, we don't want to force the use of a bundler such as ESBuild, so they will remain having ".js" file extensions

- wait for typedoc-plugin-markdown to release next version: https://github.com/tgreyuk/typedoc-plugin-markdown/discussions/372

- use stack overflow to remove isaac-typescript-definitions from deps
  - difficult, do it when I have the courage
  - make sure that isaacscript-common still works through link in dev
