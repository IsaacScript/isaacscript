- use sort eslint plugin to sort object alphabetically in base-typescript-eslint

- test eslint-plugin-import

- package.mod.json: dynamically fetch TypeScript version from TSTL GitHub repo

- Upgrade ESLint infra when this PR passes: https://github.com/eslint/eslint/pull/18134

- try removing ESLint parserOptions, since they might not be needed with flat config
- re-add test script to package.json for plugin when RuleTester is finished for V8
  - https://github.com/typescript-eslint/typescript-eslint/issues/9017

- waiting on ESLint 9 support:
  - RuleTester
  - eslint-plugin-no-autofix
  - eslint-plugin-eslint-comments
  - eslint-plugin-import
  - eslint-plugin-deprecation

- re-enable knip in lint.ts
- re-enable check-ts in lint.ts
- see top comment of "update.ts" (and uncomment "no-useless-assignment")

- lint projects:
  - fix returning `Promise<string[]>`
  - fix `prefer-readonly-parameter-types` for Array<Foo>
  - https://github.com/typescript-eslint/typescript-eslint/issues/8079
  - https://github.com/typescript-eslint/typescript-eslint/issues/4571
  - `T extends Foo[]` --> `T extends readonly Foo[]`

- investigate array vs set performance (also search for "O(1)" afterward)
  - https://stackoverflow.com/questions/39007637/javascript-set-vs-array-performance#:~:text=In%20general%20an%20array%20will,always%20faster%20for%20%3E%2052%20elements.

----------------------------------------------------------------------------------------------------

- change to knip.config.jsonc (potentially, once Knip v4 releases)
- change to cspell.config.jsonc (if knip is changed)

- wait for eslint-plugin-n to fix rule:
  - https://github.com/eslint-community/eslint-plugin-n/issues/134
  - if this takes too long, we can make a new ESLint rule to automatically convert 'import *.js";' to '.ts'
  - the idea here is to have IsaacScript mods use ".ts" file extensions instead of ".js"
    - blocked on: https://github.com/TypeScriptToLua/TypeScriptToLua/issues/1514
  - for Node.js apps, we don't want to force the use of a bundler such as ESBuild, so they will remain having ".js" file extensions

- wait for typedoc-plugin-markdown to release next version: https://github.com/tgreyuk/typedoc-plugin-markdown/discussions/372

- import eslint-plugin-plugin
  - blocked on: https://github.com/eslint-community/eslint-plugin-eslint-plugin/issues/375

- update eslint to new config
  - wait until ESLint 9 is released so that environment flag is not necessary
  - wait until @typescript-eslint/plugin is using flat config and has good docs
  - ESLint does not support "eslint.config.mjs" file format, so it requires either:
    1. changing package.json type
    2. specifying config file location when running, e.g. "--config eslint.config.mjs"

- use stack overflow to remove isaac-typescript-definitions from deps
  - difficult, do it when I have the courage
  - make sure that isaacscript-common still works through link in dev
