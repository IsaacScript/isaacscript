- submit bug report: https://github.com/dominikg/tsconfck/discussions/185#discussioncomment-10318566
- in eslint plugin, now a type error in the script folder won't be found... how can i work around this?
- make all tsconfig not extends from base (COMPOSITION OVER INHERITANCE)
- delete all "outDir"

- ADD DEP https://eslint.style/
  AND REPLACE:
      /**
       * Even though the `typescript-eslint` team does not recommend using formatting rules, this
       * rule is not handled by Prettier, so we must use ESLint to enforce it.
       */
      "@typescript-eslint/lines-around-comment": [
        "warn",
        {
          // All of these properties default to false.
          allowBlockStart: true,
          allowObjectStart: true,
          allowArrayStart: true,
          allowClassStart: true,
          allowEnumStart: true,
          allowInterfaceStart: true,
          allowModuleStart: true,
          allowTypeStart: true,
        },
      ],

      /**
       * Even though the `typescript-eslint` team does not recommend using formatting rules, this
       * rule is not handled by Prettier, so we must use ESLint to enforce it.
       */
      "@typescript-eslint/lines-between-class-members": [
        "warn",
        "always",
        {
          exceptAfterSingleLine: true,
        },
      ],

      /**
       * We forbid unnecessary backticks by using the options specified in [the
       * `eslint-config-prettier`
       * documentation](https://github.com/prettier/eslint-config-prettier#enforce-backticks).
       */
      "@typescript-eslint/quotes": [
        "warn",
        "double",
        {
          avoidEscape: true,
          allowTemplateLiterals: false,
        },
      ],

- add "// @ts-check" to all eslint configs in the monorepo + the template

- // TODO: once on ESLint 9, reorganize rules in "base-eslint.js" to correspond to the website:
  https://eslint.org/docs/latest/rules/#layout--formatting
  (for deprecated rules)

- // TODO: Uncomment when TypeScript 5.5 is released.

- use `sort-keys` eslint plugin to sort object alphabetically in base-typescript-eslint
  https://eslint.org/docs/latest/rules/sort-keys

- test import no-cycle rule (might need to re-add typescript config from main branch)

- things to consider before merging flat config branch:
  - vscode extension no longer in alpha/beta: https://github.com/microsoft/vscode-eslint/releases

- test eslint-plugin-import

- package.mod.json: dynamically fetch TypeScript version from TSTL GitHub repo

- Upgrade ESLint infra when this PR passes: https://github.com/eslint/eslint/pull/18134

- try removing ESLint parserOptions, since they might not be needed with flat config
- re-add test script to package.json for plugin when RuleTester is finished for V8
  - https://github.com/typescript-eslint/typescript-eslint/issues/9017

- new TSESLint changes:
  - https://typescript-eslint.io/blog/announcing-typescript-eslint-v8
  - change project to projectServices
  - remove tsconfig.eslint.json

- waiting on ESLint 9 support:
  - RuleTester
  - eslint-plugin-import
  - eslint-plugin-deprecation

- does end-user need to install eslint-import-resolver-typescript? if so we need to include it in isaacscript-lint meta package. we might get error of:
  - typescript with invalid interface loaded as resolver
  - https://github.com/un-ts/eslint-plugin-import-x/issues/29#issuecomment-2140996174

- re-enable knip in lint.ts
- re-enable check-ts in lint.ts
- see top comment of "update.ts" (and uncomment "no-useless-assignment")

- lint projects:
  - fix returning `Promise<string[]>`
  - fix `prefer-readonly-parameter-types` for Array<Foo>
  - https://github.com/typescript-eslint/typescript-eslint/issues/7114
  - https://github.com/typescript-eslint/typescript-eslint/issues/8079
  - https://github.com/typescript-eslint/typescript-eslint/issues/4571
  - `T extends Foo[]` --> `T extends readonly Foo[]`

----------------------------------------------------------------------------------------------------

- change to knip.config.jsonc (potentially, once Knip v4 releases)
- change to cspell.config.jsonc (if knip is changed)

- wait for eslint-plugin-n to fix rule:
  - https://github.com/eslint-community/eslint-plugin-n/issues/134
  - if this takes too long, we can make a new ESLint rule to automatically convert 'import *.js";' to '.ts'
  - the idea here is to have IsaacScript mods use ".ts" file extensions instead of ".js"
    - blocked on: https://github.com/TypeScriptToLua/TypeScriptToLua/issues/1514
  - for Node.js apps, we don't want to force the use of a bundler such as ESBuild, so they will remain having ".js" file extensions

- wait for typedoc-plugin-markdown to release next version: https://github.com/tgreyuk/typedoc-plugin-markdown/discussions/372

- import eslint-plugin-plugin
  - blocked on: https://github.com/eslint-community/eslint-plugin-eslint-plugin/issues/375

- update eslint to new config
  - wait until ESLint 9 is released so that environment flag is not necessary
  - wait until @typescript-eslint/plugin is using flat config and has good docs
  - ESLint does not support "eslint.config.mjs" file format, so it requires either:
    1. changing package.json type
    2. specifying config file location when running, e.g. "--config eslint.config.mjs"

- use stack overflow to remove isaac-typescript-definitions from deps
  - difficult, do it when I have the courage
  - make sure that isaacscript-common still works through link in dev
